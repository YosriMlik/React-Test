{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\n/* Render Prop\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst News = () => (\r\n  <div>\r\n    <h1>Any place in your app!</h1>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"email\" name=\"email\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" />\r\n          <Field type=\"password\" name=\"password\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" />\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n*/\nimport React from 'react';\nimport { useFormik } from 'formik'; // A custom validation function. This must return an object\n// which keys are symmetrical to our values/initialValues\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst News = () => {\n  _s();\n\n  // Pass the useFormik() hook initial form values, a validate function that will be called when\n  // form values change or fields are blurred, and a submit function that will\n  // be called when the form is submitted\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5 mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useFormik Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formik.errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 36\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formik.errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 35\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: formik.errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 32\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(News, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useFormik","validate","values","errors","firstName","length","lastName","email","test","News","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/News.js"],"sourcesContent":["/* Render Prop\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst News = () => (\r\n  <div>\r\n    <h1>Any place in your app!</h1>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"email\" name=\"email\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" />\r\n          <Field type=\"password\" name=\"password\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" />\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n*/\r\n\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\n// A custom validation function. This must return an object\r\n// which keys are symmetrical to our values/initialValues\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  } else if (values.firstName.length > 15) {\r\n    errors.firstName = 'Must be 15 characters or less';\r\n  }\r\n\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  } else if (values.lastName.length > 20) {\r\n    errors.lastName = 'Must be 20 characters or less';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst News = () => {\r\n  // Pass the useFormik() hook initial form values, a validate function that will be called when\r\n  // form values change or fields are blurred, and a submit function that will\r\n  // be called when the form is submitted\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n    },\r\n    validate,\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  return (\r\n    <div className='mx-5 mt-2'>      \r\n    <h1>useFormik Form</h1>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"firstName\">First Name</label>\r\n      <br />\r\n      <input\r\n        id=\"firstName\"\r\n        name=\"firstName\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.firstName}\r\n      />\r\n      <div className=\"text-danger\">\r\n        {formik.errors.firstName ? <span>{formik.errors.firstName}</span> : null}\r\n      </div>\r\n\r\n      <label htmlFor=\"lastName\">Last Name</label>\r\n      <br />\r\n      <input\r\n        id=\"lastName\"\r\n        name=\"lastName\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.lastName}\r\n      />\r\n      <div className=\"text-danger\">\r\n        {formik.errors.lastName ? <span>{formik.errors.lastName}</span> : null}\r\n      </div>\r\n\r\n      <br></br>\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <br />\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n      <div className=\"text-danger\">\r\n        {formik.errors.email ? <span>{formik.errors.email}</span> : null}\r\n      </div>\r\n      <br></br>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default News;"],"mappings":"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"},"metadata":{},"sourceType":"module"}