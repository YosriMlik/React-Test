{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\Form.js\";\nimport React from 'react';\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\"; //import { useNavigate } from 'react-router-dom'\n\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forme = () => {\n  /*const validate = (values) => {\r\n      const errors = {}\r\n  \r\n      if(!values.name){\r\n          errors.name = 'Required'\r\n      } else if(!isNaN(values.name)){\r\n          errors.name = 'Name is not a number'\r\n      }\r\n  \r\n      if(!values.phone){\r\n          errors.phone = 'Required'\r\n      } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n          errors.phone = 'Phone should be 8 numbers'\r\n      }\r\n  \r\n      return errors\r\n  };\r\n    let navigate = useNavigate()*/\n\n  /*const verifName = () => {\r\n      if(formik.errors.name && formik.touched.name){\r\n          let nameTag = document.getElementById('name')\r\n          nameTag.style.borderColor = '#084298';\r\n          nameTag.style.boxShadow = 'rgb(248 210 248) 0px 0px 0px 0.2rem';\r\n          return(<div style={{color : '#084298'}}>{formik.errors.name}</div>)\r\n      } else {\r\n          try{\r\n              let nameTag = document.getElementById('name')\r\n              nameTag.style.borderColor = '';\r\n              nameTag.style.boxShadow = '';\r\n              return(<br />)\r\n          } catch{ return(<br />) }\r\n      }\r\n  }*/\n  const phoneRender = errMsg => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  };\n\n  const nameRender = errMsg => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      phone: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(15).required('This field is Required'),\n      phone: Yup.number().max(8).required('This field is Required')\n    }),\n    onSubmit: values => {\n      alert('Name : ' + values.name + '\\nPhone : ' + values.phone + '\\nNow go home'); //navigate('/')\n    },\n    children: formik => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mx-5 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Formik Form with Yup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            render: nameRender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"phone\",\n            id: \"phone\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"phone\",\n            render: phoneRender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !formik.isValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Forme;\nexport default Forme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forme\");","map":{"version":3,"names":["React","useFormik","Formik","Form","Field","ErrorMessage","Yup","Forme","phoneRender","errMsg","nameRender","name","phone","object","string","max","required","number","values","alert","formik","isValid"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/Form.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\";\r\n//import { useNavigate } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\n\r\n\r\nconst Forme = () => {\r\n\r\n    /*const validate = (values) => {\r\n        const errors = {}\r\n    \r\n        if(!values.name){\r\n            errors.name = 'Required'\r\n        } else if(!isNaN(values.name)){\r\n            errors.name = 'Name is not a number'\r\n        }\r\n    \r\n        if(!values.phone){\r\n            errors.phone = 'Required'\r\n        } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n            errors.phone = 'Phone should be 8 numbers'\r\n        }\r\n    \r\n        return errors\r\n    };\r\n\r\n    let navigate = useNavigate()*/\r\n\r\n\r\n    /*const verifName = () => {\r\n        if(formik.errors.name && formik.touched.name){\r\n            let nameTag = document.getElementById('name')\r\n            nameTag.style.borderColor = '#084298';\r\n            nameTag.style.boxShadow = 'rgb(248 210 248) 0px 0px 0px 0.2rem';\r\n            return(<div style={{color : '#084298'}}>{formik.errors.name}</div>)\r\n        } else {\r\n            try{\r\n                let nameTag = document.getElementById('name')\r\n                nameTag.style.borderColor = '';\r\n                nameTag.style.boxShadow = '';\r\n                return(<br />)\r\n            } catch{ return(<br />) }\r\n        }\r\n    }*/\r\n\r\n    const phoneRender = (errMsg) => {\r\n        return(<span className='text-danger'>{errMsg}</span>)\r\n    }\r\n\r\n    const nameRender = (errMsg) => {\r\n        return(<span className='text-danger'>{errMsg}</span>)\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n        initialValues = {\r\n            {\r\n                name : '',\r\n                phone : ''\r\n            }\r\n        }\r\n        validationSchema = {\r\n            Yup.object({\r\n                name : Yup.string().max(15).required('This field is Required'),\r\n                phone : Yup.number().max(8).required('This field is Required')\r\n            })\r\n        }\r\n        onSubmit = {\r\n            (values) => {\r\n                alert('Name : ' + values.name+'\\nPhone : ' + values.phone+'\\nNow go home')\r\n                //navigate('/')\r\n            }\r\n        }>\r\n            {\r\n                (formik) => {\r\n                    return(\r\n                        <Form className='mx-5 mt-2'>\r\n                            <h1>Formik Form with Yup</h1>\r\n\r\n                            <div>\r\n                                <label htmlFor='name'>Name :</label>\r\n                                <Field type='text' name='name' id='name' className='form-control' />\r\n                                <ErrorMessage name='name' render={nameRender} />\r\n                            </div>\r\n            \r\n                            <div>\r\n                                <label htmlFor='phone'>Phone :</label>\r\n                                <Field type='text' name='phone' id='phone' className='form-control' />\r\n                                <ErrorMessage name='phone' render={phoneRender} />\r\n                            </div>\r\n            \r\n                            <br></br>\r\n            \r\n                            <button type='submit' disabled={!formik.isValid}>Submit</button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    )\r\n\r\n\r\n};\r\n\r\nexport default Forme;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,YAAzC,QAA6D,QAA7D,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAIA,MAAMC,KAAK,GAAG,MAAM;EAEhB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,MAAMC,WAAW,GAAIC,MAAD,IAAY;IAC5B,oBAAO;MAAM,SAAS,EAAC,aAAhB;MAAA,UAA+BA;IAA/B;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFD;;EAIA,MAAMC,UAAU,GAAID,MAAD,IAAY;IAC3B,oBAAO;MAAM,SAAS,EAAC,aAAhB;MAAA,UAA+BA;IAA/B;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFD;;EAIA,oBACI,QAAC,MAAD;IACA,aAAa,EACT;MACIE,IAAI,EAAG,EADX;MAEIC,KAAK,EAAG;IAFZ,CAFJ;IAOA,gBAAgB,EACZN,GAAG,CAACO,MAAJ,CAAW;MACPF,IAAI,EAAGL,GAAG,CAACQ,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqBC,QAArB,CAA8B,wBAA9B,CADA;MAEPJ,KAAK,EAAGN,GAAG,CAACW,MAAJ,GAAaF,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,CAA6B,wBAA7B;IAFD,CAAX,CARJ;IAaA,QAAQ,EACHE,MAAD,IAAY;MACRC,KAAK,CAAC,YAAYD,MAAM,CAACP,IAAnB,GAAwB,YAAxB,GAAuCO,MAAM,CAACN,KAA9C,GAAoD,eAArD,CAAL,CADQ,CAER;IACH,CAjBL;IAAA,UAoBSQ,MAAD,IAAY;MACR,oBACI,QAAC,IAAD;QAAM,SAAS,EAAC,WAAhB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAA,wBACI;YAAO,OAAO,EAAC,MAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,IAAI,EAAC,MAAxB;YAA+B,EAAE,EAAC,MAAlC;YAAyC,SAAS,EAAC;UAAnD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,YAAD;YAAc,IAAI,EAAC,MAAnB;YAA0B,MAAM,EAAEV;UAAlC;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eASI;UAAA,wBACI;YAAO,OAAO,EAAC,OAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,IAAI,EAAC,OAAxB;YAAgC,EAAE,EAAC,OAAnC;YAA2C,SAAS,EAAC;UAArD;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,YAAD;YAAc,IAAI,EAAC,OAAnB;YAA2B,MAAM,EAAEF;UAAnC;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ,eAeI;UAAA;UAAA;UAAA;QAAA,QAfJ,eAiBI;UAAQ,IAAI,EAAC,QAAb;UAAsB,QAAQ,EAAE,CAACY,MAAM,CAACC,OAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAqBH;EA1CT;IAAA;IAAA;IAAA;EAAA,QADJ;AAiDH,CAhGD;;KAAMd,K;AAkGN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}