{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\Form.js\";\nimport React from 'react';\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\"; //import { useNavigate } from 'react-router-dom'\n\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forme = () => {\n  /*const validate = (values) => {\r\n      const errors = {}\r\n  \r\n      if(!values.name){\r\n          errors.name = 'Required'\r\n      } else if(!isNaN(values.name)){\r\n          errors.name = 'Name is not a number'\r\n      }\r\n  \r\n      if(!values.phone){\r\n          errors.phone = 'Required'\r\n      } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n          errors.phone = 'Phone should be 8 numbers'\r\n      }\r\n  \r\n      return errors\r\n  };\r\n    let navigate = useNavigate()*/\n  const validationSchema = Yup.object({\n    name: Yup.string().required('This field is Required'),\n    phone: Yup.string().required('This field is Required')\n  });\n\n  const verifName = () => {\n    if (formik.errors.name && formik.touched.name) {\n      let nameTag = document.getElementById('name');\n      nameTag.style.borderColor = '#084298';\n      nameTag.style.boxShadow = 'rgb(248 210 248) 0px 0px 0px 0.2rem';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#084298'\n        },\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    } else {\n      try {\n        let nameTag = document.getElementById('name');\n        nameTag.style.borderColor = '';\n        nameTag.style.boxShadow = '';\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n      } catch {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      phone: ''\n    },\n    validationSchema: true,\n    onSubmit: values => {\n      alert('Name : ' + values.name + '\\nPhone : ' + values.phone + '\\nNow go home');\n      formik.resetForm(); //navigate('/')\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5 mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useformik Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"form-control\",\n        ...formik.getFieldProps('name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), verifName(), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        className: \"form-control\",\n        ...formik.getFieldProps('phone')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), formik.errors.phone && formik.touched.phone ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 64\n      }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Forme;\nexport default Forme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forme\");","map":{"version":3,"names":["React","useFormik","Formik","Form","Field","ErrorMessage","Yup","Forme","validationSchema","object","name","string","required","phone","verifName","formik","errors","touched","nameTag","document","getElementById","style","borderColor","boxShadow","color","values","alert","resetForm","handleSubmit","getFieldProps"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/Form.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\";\r\n//import { useNavigate } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\n\r\n\r\nconst Forme = () => {\r\n\r\n    /*const validate = (values) => {\r\n        const errors = {}\r\n    \r\n        if(!values.name){\r\n            errors.name = 'Required'\r\n        } else if(!isNaN(values.name)){\r\n            errors.name = 'Name is not a number'\r\n        }\r\n    \r\n        if(!values.phone){\r\n            errors.phone = 'Required'\r\n        } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n            errors.phone = 'Phone should be 8 numbers'\r\n        }\r\n    \r\n        return errors\r\n    };\r\n\r\n    let navigate = useNavigate()*/\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required('This field is Required'),\r\n        phone : Yup.string().required('This field is Required')\r\n    })\r\n\r\n    const verifName = () => {\r\n        if(formik.errors.name && formik.touched.name){\r\n            let nameTag = document.getElementById('name')\r\n            nameTag.style.borderColor = '#084298';\r\n            nameTag.style.boxShadow = 'rgb(248 210 248) 0px 0px 0px 0.2rem';\r\n            return(<div style={{color : '#084298'}}>{formik.errors.name}</div>)\r\n        } else {\r\n            try{\r\n                let nameTag = document.getElementById('name')\r\n                nameTag.style.borderColor = '';\r\n                nameTag.style.boxShadow = '';\r\n                return(<br />)\r\n            } catch{ return(<br />) }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Formik \r\n        initialValues = {\r\n            {\r\n                name : '',\r\n                phone : ''\r\n            }\r\n        }\r\n        validationSchema\r\n        onSubmit  = {\r\n            (values) => {\r\n                alert('Name : ' + values.name+'\\nPhone : ' + values.phone+'\\nNow go home')\r\n                formik.resetForm()\r\n                //navigate('/')\r\n            }\r\n        }\r\n        >\r\n    \r\n        </Formik>\r\n    )\r\n\r\n    return(\r\n\r\n        <div className='mx-5 mt-2'>\r\n            <h1>useformik Form</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor='name'>Name :</label>\r\n                <input type='text' id='name' className='form-control' \r\n                {... formik.getFieldProps('name')}\r\n                />\r\n                {verifName()}\r\n\r\n                <label htmlFor='phone'>Phone :</label>\r\n                <input type='text' id='phone' className='form-control'\r\n                {... formik.getFieldProps('phone')}\r\n                />\r\n                {formik.errors.phone && formik.touched.phone ? <div>{formik.errors.phone}</div> : <br></br>}\r\n\r\n                <br></br>\r\n\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Forme;"],"mappings":"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"},"metadata":{},"sourceType":"module"}