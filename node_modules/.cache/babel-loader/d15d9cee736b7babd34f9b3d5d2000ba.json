{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from \"formik\";\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst verifName = () => {\n  if (formik.errors.name && formik.touched.name) {\n    document.getElementById('name').style.boxShadow = '0 0 0 0.2rem rgba(50, 239, 66, 0.25) !important';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n};\n\nconst Forme = () => {\n  _s();\n\n  /*const validate = (values) => {\r\n      const errors = {}\r\n  \r\n      if(!values.name){\r\n          errors.name = 'Required'\r\n      } else if(!isNaN(values.name)){\r\n          errors.name = 'Name is not a number'\r\n      }\r\n  \r\n      if(!values.phone){\r\n          errors.phone = 'Required'\r\n      } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n          errors.phone = 'Phone should be 8 numbers'\r\n      }\r\n  \r\n      return errors\r\n  };\r\n    let navigate = useNavigate()*/\n  const validationSchema = Yup.object({\n    name: Yup.string().required('This field is Required'),\n    phone: Yup.string().required('This field is Required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      alert('Name : ' + values.name + '\\nPhone : ' + values.phone + '\\nNow go home'); //navigate('/')\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5 mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useformik Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"form-control\",\n        value: formik.values.name,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), verifName, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        className: \"form-control\",\n        value: formik.values.phone,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), formik.errors.phone && formik.touched.phone ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 64\n      }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forme, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Forme;\nexport default Forme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forme\");","map":{"version":3,"names":["React","useFormik","useNavigate","Yup","verifName","formik","errors","name","touched","document","getElementById","style","boxShadow","Forme","validationSchema","object","string","required","phone","initialValues","onSubmit","values","alert","handleSubmit","handleChange","handleBlur"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/Form.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\nconst verifName = () => {\r\n    if(formik.errors.name && formik.touched.name){\r\n        document.getElementById('name').style.boxShadow = '0 0 0 0.2rem rgba(50, 239, 66, 0.25) !important';\r\n        return(<div>{formik.errors.name}</div>)\r\n    } else {\r\n        return(<br />)\r\n    }\r\n}\r\n\r\nconst Forme = () => {\r\n\r\n    /*const validate = (values) => {\r\n        const errors = {}\r\n    \r\n        if(!values.name){\r\n            errors.name = 'Required'\r\n        } else if(!isNaN(values.name)){\r\n            errors.name = 'Name is not a number'\r\n        }\r\n    \r\n        if(!values.phone){\r\n            errors.phone = 'Required'\r\n        } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n            errors.phone = 'Phone should be 8 numbers'\r\n        }\r\n    \r\n        return errors\r\n    };\r\n\r\n    let navigate = useNavigate()*/\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required('This field is Required'),\r\n        phone : Yup.string().required('This field is Required')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name : '',\r\n            phone : ''\r\n        },\r\n        validationSchema,\r\n        onSubmit : (values) => {\r\n            alert('Name : ' + values.name+'\\nPhone : ' + values.phone+'\\nNow go home')\r\n            //navigate('/')\r\n        }\r\n    });\r\n\r\n\r\n    return(\r\n        <div className='mx-5 mt-2'>\r\n            <h1>useformik Form</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor='name'>Name :</label>\r\n                <input type='text' id='name' className='form-control' \r\n                value={formik.values.name} onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                />\r\n                {verifName}\r\n\r\n\r\n                <label htmlFor='phone'>Phone :</label>\r\n                <input type='text' id='phone' className='form-control'\r\n                value={formik.values.phone} onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                />\r\n                {formik.errors.phone && formik.touched.phone ? <div>{formik.errors.phone}</div> : <br></br>}\r\n\r\n                <br></br>\r\n\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Forme;"],"mappings":"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"},"metadata":{},"sourceType":"module"}