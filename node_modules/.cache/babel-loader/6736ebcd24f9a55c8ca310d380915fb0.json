{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from \"formik\";\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forme = () => {\n  _s();\n\n  /*const validate = (values) => {\r\n      const errors = {}\r\n  \r\n      if(!values.name){\r\n          errors.name = 'Required'\r\n      } else if(!isNaN(values.name)){\r\n          errors.name = 'Name is not a number'\r\n      }\r\n  \r\n      if(!values.phone){\r\n          errors.phone = 'Required'\r\n      } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n          errors.phone = 'Phone should be 8 numbers'\r\n      }\r\n  \r\n      return errors\r\n  };\r\n    let navigate = useNavigate()*/\n  const validationSchema = Yup.object({\n    name: Yup.string().required('This field is Required'),\n    phone: Yup.string().required('This field is Required')\n  });\n\n  const verifName = () => {\n    if (formik.errors.name && formik.touched.name) {\n      document.getElementById('name').style.borderColor = 'green';\n      document.getElementById('name').style.boxShadow = '0 0 0 0.2rem rgba(50, 239, 66, 0.25) ';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      alert('Name : ' + values.name + '\\nPhone : ' + values.phone + '\\nNow go home'); //navigate('/')\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5 mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useformik Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        className: \"form-control\",\n        value: formik.values.name,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), verifName(), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        className: \"form-control\",\n        value: formik.values.phone,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), formik.errors.phone && formik.touched.phone ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 64\n      }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 99\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Forme, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Forme;\nexport default Forme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forme\");","map":{"version":3,"names":["React","useFormik","useNavigate","Yup","Forme","validationSchema","object","name","string","required","phone","verifName","formik","errors","touched","document","getElementById","style","borderColor","boxShadow","initialValues","onSubmit","values","alert","handleSubmit","handleChange","handleBlur"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/Form.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\n\r\n\r\n\r\nconst Forme = () => {\r\n\r\n    /*const validate = (values) => {\r\n        const errors = {}\r\n    \r\n        if(!values.name){\r\n            errors.name = 'Required'\r\n        } else if(!isNaN(values.name)){\r\n            errors.name = 'Name is not a number'\r\n        }\r\n    \r\n        if(!values.phone){\r\n            errors.phone = 'Required'\r\n        } else if( (isNaN(values.phone) || values.phone.length != 8) ){\r\n            errors.phone = 'Phone should be 8 numbers'\r\n        }\r\n    \r\n        return errors\r\n    };\r\n\r\n    let navigate = useNavigate()*/\r\n\r\n    const validationSchema = Yup.object({\r\n        name : Yup.string().required('This field is Required'),\r\n        phone : Yup.string().required('This field is Required')\r\n    })\r\n\r\n    const verifName = () => {\r\n        if(formik.errors.name && formik.touched.name){\r\n            document.getElementById('name').style.borderColor = 'green'\r\n            document.getElementById('name').style.boxShadow = '0 0 0 0.2rem rgba(50, 239, 66, 0.25) ';\r\n            return(<div>{formik.errors.name}</div>)\r\n        } else {\r\n            return(<br />)\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name : '',\r\n            phone : ''\r\n        },\r\n        validationSchema,\r\n        onSubmit : (values) => {\r\n            alert('Name : ' + values.name+'\\nPhone : ' + values.phone+'\\nNow go home')\r\n            //navigate('/')\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className='mx-5 mt-2'>\r\n            <h1>useformik Form</h1>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <label htmlFor='name'>Name :</label>\r\n                <input type='text' id='name' className='form-control' \r\n                value={formik.values.name} onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                />\r\n                {verifName()}\r\n\r\n\r\n                <label htmlFor='phone'>Phone :</label>\r\n                <input type='text' id='phone' className='form-control'\r\n                value={formik.values.phone} onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                />\r\n                {formik.errors.phone && formik.touched.phone ? <div>{formik.errors.phone}</div> : <br></br>}\r\n\r\n                <br></br>\r\n\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Forme;"],"mappings":"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"},"metadata":{},"sourceType":"module"}