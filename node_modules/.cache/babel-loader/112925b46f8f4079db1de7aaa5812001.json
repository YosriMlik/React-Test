{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ymlik\\\\Desktop\\\\React\\\\app\\\\src\\\\components\\\\News.js\";\n\n/* Render Prop\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst News = () => (\r\n  <div>\r\n    <h1>Any place in your app!</h1>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {\r\n        ({ isSubmitting }) => (\r\n          <Form>\r\n            <Field type=\"email\" name=\"email\" />\r\n            <ErrorMessage name=\"email\" component=\"div\" />\r\n            <Field type=\"password\" name=\"password\" />\r\n            <ErrorMessage name=\"password\" component=\"div\" />\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  </div>\r\n);\r\n====================================================================================================================================================================\r\n====================================================================================================================================================================*/\nimport React from 'react';\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\nimport './News.css'; // A custom validation function. This must return an object\n// which keys are symmetrical to our values/initialValues\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst News = () => {\n  // Pass the useFormik() hook initial form values, a validate function that will be called when\n  // form values change or fields are blurred, and a submit function that will\n  // be called when the form is submitted\n\n  /*const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: 'fljkleh@fhfd.fddfh',\r\n    },\r\n    validate,\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n    const veriflastName = () => {\r\n    if(formik.errors.lastName && formik.touched.lastName) {\r\n      document.getElementById('lastName').classList.add('field');\r\n      return (<span>{' ['+formik.errors.lastName+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('lastName').classList.remove('field');\r\n        return null\r\n      } catch{\r\n        }\r\n    } \r\n  }\r\n    const veriffirstName = () => {\r\n    if(formik.errors.firstName && formik.touched.firstName){\r\n      document.getElementById('firstName').classList.add('field');\r\n      return(<span>{' ['+formik.errors.firstName+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('firstName').classList.remove('field');\r\n        return null\r\n      } catch{}\r\n    } \r\n  } \r\n    const verifEmail = () => {\r\n    if(formik.errors.email && formik.touched.email){\r\n      document.getElementById('email').classList.add('field');\r\n      return(<span>{' ['+formik.errors.email+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('email').classList.remove('field');\r\n        return null\r\n      } catch{}\r\n    } \r\n  } */\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    className: \"mx-5 mt-2\",\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: 'fljkleh@fhfd.fddfh'\n    },\n    validate: true,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useFormik Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"form-control w-50\",\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"form-control w-50\",\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"lastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        className: \"form-control w-50\",\n        id: \"email\",\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","Form","Formik","Field","ErrorMessage","validate","values","errors","firstName","length","lastName","email","test","News","alert","JSON","stringify"],"sources":["C:/Users/ymlik/Desktop/React/app/src/components/News.js"],"sourcesContent":["/* Render Prop\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nconst News = () => (\r\n  <div>\r\n    <h1>Any place in your app!</h1>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {\r\n        ({ isSubmitting }) => (\r\n          <Form>\r\n            <Field type=\"email\" name=\"email\" />\r\n            <ErrorMessage name=\"email\" component=\"div\" />\r\n            <Field type=\"password\" name=\"password\" />\r\n            <ErrorMessage name=\"password\" component=\"div\" />\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )\r\n      }\r\n    </Formik>\r\n  </div>\r\n);\r\n====================================================================================================================================================================\r\n====================================================================================================================================================================*/\r\n\r\nimport React from 'react';\r\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\r\nimport './News.css'\r\n\r\n// A custom validation function. This must return an object\r\n// which keys are symmetrical to our values/initialValues\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.firstName) {\r\n    errors.firstName = 'Required';\r\n  } else if (values.firstName.length > 15) {\r\n    errors.firstName = 'Must be 15 characters or less';\r\n  }\r\n\r\n  if (!values.lastName) {\r\n    errors.lastName = 'Required';\r\n  } else if (values.lastName.length > 20) {\r\n    errors.lastName = 'Must be 20 characters or less';\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst News = () => {\r\n  // Pass the useFormik() hook initial form values, a validate function that will be called when\r\n  // form values change or fields are blurred, and a submit function that will\r\n  // be called when the form is submitted\r\n\r\n  /*const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: 'fljkleh@fhfd.fddfh',\r\n    },\r\n    validate,\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  const veriflastName = () => {\r\n    if(formik.errors.lastName && formik.touched.lastName) {\r\n      document.getElementById('lastName').classList.add('field');\r\n      return (<span>{' ['+formik.errors.lastName+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('lastName').classList.remove('field');\r\n        return null\r\n      } catch{\r\n\r\n      }\r\n    } \r\n  }\r\n\r\n  const veriffirstName = () => {\r\n    if(formik.errors.firstName && formik.touched.firstName){\r\n      document.getElementById('firstName').classList.add('field');\r\n      return(<span>{' ['+formik.errors.firstName+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('firstName').classList.remove('field');\r\n        return null\r\n      } catch{}\r\n    } \r\n  } \r\n\r\n  const verifEmail = () => {\r\n    if(formik.errors.email && formik.touched.email){\r\n      document.getElementById('email').classList.add('field');\r\n      return(<span>{' ['+formik.errors.email+']'}</span>)\r\n    } else {\r\n      try{\r\n        document.getElementById('email').classList.remove('field');\r\n        return null\r\n      } catch{}\r\n    } \r\n  } */\r\n\r\n  return (\r\n    <Formik className='mx-5 mt-2'\r\n    initialValues={\r\n      {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: 'fljkleh@fhfd.fddfh',\r\n      }\r\n    }\r\n    validate\r\n    onSubmit = {\r\n      values => {\r\n        alert(JSON.stringify(values, null, 2));\r\n      }\r\n    }\r\n    >      \r\n      <h1>useFormik Form</h1>\r\n      <Form>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n\r\n        <br />\r\n        <Field\r\n          className=\"form-control w-50\"\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n        />\r\n          <ErrorMessage name=\"firstName\" />\r\n\r\n        <br />\r\n\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n\r\n        <br />\r\n        <Field\r\n          className=\"form-control w-50\"\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n        />\r\n          <ErrorMessage name=\"lastName\" />\r\n\r\n\r\n        <br></br>\r\n\r\n        <label htmlFor=\"email\">Email Address</label>\r\n\r\n        <br />\r\n        <Field\r\n          className=\"form-control w-50\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n        />\r\n        <ErrorMessage name=\"email\" />\r\n\r\n        <br></br>\r\n        <button type=\"submit\" className='btn btn-primary'>Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default News;"],"mappings":"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"},"metadata":{},"sourceType":"module"}